@model PensionModel.ViewModel.ReportViewModel
@using PensionModel
ViewBag.Title = "PensionReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{    
    VPDPensionEntities DbContext = new VPDPensionEntities();

    var id = Convert.ToInt32(Session["Emp"]);
    var lst = DbContext.EmployeeMasters.Where(k => k.EmpId == id).SingleOrDefault();
    <div class="panel panel-info" id="dvpension">
        <div class="panel-body">
            @{
                int month = 0;
                int year = 0;
                int age = 0;
                <div class="col-sm-12" style="text-align: center; font-size: 18px; font-family: -webkit-pictograph;">
                    <label><strong>Pension Worksheet</strong></label>
                </div>
                <div class="col-sm-12" style="text-align: left; font-size: 16px; font-family: -webkit-pictograph;">
                    <label class="col-sm-1"><strong>Part 1</strong></label>
                    <label class="col-sm-1" style="text-align: right;"><strong>:</strong></label>
                    <label class="col-sm-2"><strong>Particulars</strong></label>
                    <div class="col-sm-7"></div>
                </div>
                <div class="col-sm-12" style="height: 15px;"></div>
                <div class="col-sm-12" style="text-align: left; font-size: 13px; font-family: -webkit-pictograph;">
                    @if (lst != null)
                    {
                        <div class="col-sm-4" style="border: solid; border-width: thin;">
                            <label>Name :</label>
                            @Html.DisplayFor(m => lst.EmpName)
                            <br />
                            <label>Branch :</label>
                            @Html.DisplayFor(m => lst.EmpName, new { @style = "text-align:right;" })
                            <br />
                            @if (lst.Merged == 0 || lst.Merged == null)
                            {
                                <label>DOJ :</label>
                                @Html.DisplayFor(m => lst.DOJ, new { @style = "text-align:right;", @Value = lst.DOJ.HasValue ? lst.DOJ.Value.ToShortDateString() : "-" })
                            }
                            else
                            {
                                <label>DOJ :</label>
                                @Html.DisplayFor(m => lst.DOJ, new { @style = "text-align:right;", @Value = lst.DOJ.HasValue ? lst.DOJ.Value.ToShortDateString() : "-" })
                                <br />
                                <label>Merge DOJ :</label>
                                @Html.DisplayFor(m => lst.MDOJ, new { @style = "text-align:right;", @Value = lst.MDOJ.HasValue ? lst.MDOJ.Value.ToShortDateString() : "-" })   
                            }
                            <br />
                            <label>DOB :</label>
                            @Html.DisplayFor(m => lst.DOB, new { @style = "text-align:right;", @Value = lst.DOB.HasValue ? lst.DOB.Value.ToShortDateString() : "-" })
                        </div>
                        <div class="col-sm-4"></div>
                        <div class="col-sm-4" style="border: solid; border-width: thin;">
                            <label>Emp No :</label>
                            @Html.DisplayFor(m => lst.EmpNo, new { @style = "text-align:right;" })
                            <br />
                            <label>Sector :</label>
                            @Html.DisplayFor(m => lst.EmpName, new { @style = "text-align:right;" })
                            <br />
                            <label>Category :</label>
                            <br />
                            <label>DOL :</label>
                            @if (lst.Merged == 0 || lst.Merged == null)
                            {
                                <label>DOL :</label>
                                @Html.DisplayFor(m => lst.RetireDate, new { @style = "text-align:right;", @Value = lst.RetireDate.HasValue ? lst.RetireDate.Value.ToShortDateString() : "-" })
                            }
                            else
                            {
                                <label>DOL :</label>
                                @Html.DisplayFor(m => lst.RetireDate, new { @style = "text-align:right;", @Value = lst.RetireDate.HasValue ? lst.RetireDate.Value.ToShortDateString() : "-" })
                                <br />
                                <label>Merge DOL :</label>
                                @Html.DisplayFor(m => lst.MDOL, new { @style = "text-align:right;", @Value = lst.MDOL.HasValue ? lst.MDOL.Value.ToShortDateString() : "-" })
                            }
                        </div>
                    }
                </div>
                <div class="col-sm-12">
                    <div class="col-sm-12" style="border: solid; border-width: thin;">
                        <div class="col-sm-5">
                            <label class="col-sm-5">Total Service :</label>
                            @{
                                if (lst.Merged == 0 || lst.Merged == null)
                                {
                                    month = lst.RetireDate.Value.Month - lst.DOJ.Value.Month;
                                    year = lst.RetireDate.Value.Year - lst.DOJ.Value.Year;
                                }
                                else
                                {
                                    month = lst.RetireDate.Value.Month - lst.DOJ.Value.Month;
                                    year = lst.RetireDate.Value.Year - lst.DOJ.Value.Year;
                                    month += lst.MDOL.Value.Month - lst.MDOJ.Value.Month;
                                    while(month<=12)
                                    {
                                        year += 1;
                                        month -= 12;
                                    }
                                    if(month>6)
                                    {
                                        year += 1;   
                                    }
                                    year += lst.MDOL.Value.Year - lst.MDOJ.Value.Year;
                                }                                
                            }
                            <div class="col-sm-3">
                                @Html.DisplayFor(m => year) Year
                            </div>
                        </div>
                        <div class="col-sm-2"></div>
                        <div class="col-sm-5">
                            <div class="col-sm-3">
                                @Html.DisplayFor(m => month) Month
                            </div>
                            <div class="col-sm-3"></div>
                            <div class="col-sm-3">
                                @Html.DisplayFor(m => year) year
                            </div>
                        </div>
                        @*<lable></lable>*@
                    </div>
                    <div class="col-sm-12" style="height: 15px;"></div>
                    <div class="col-sm-12">
                        <label>Age at Exit :</label>
                        @{
                            if (lst.MDOL != null && lst.DOB != null)
                            {
                                age = lst.MDOL.Value.Year - lst.DOB.Value.Year;
                            }
                        }
                        @Html.DisplayFor(m => age, new { @class = "col-sm-2" }) Year
                    </div>
                    <div class="col-sm-12" style="height: 15px;"></div>
                    <div class="col-sm-12">
                        <label>Cause of Exit :</label>
                        @{
                            var lst1 = DbContext.RetirementType_Master.Where(k => k.id == lst.RetireTypeId).SingleOrDefault();
                            var AVG = 154693;
                            var pension = 2 / 100 * AVG * year;
                            var lst2 = DbContext.PensionLimits.Where(k => k.Id == lst.RetireTypeId).SingleOrDefault();
                            var Limit = lst2.Pension_Limit;
                            var finalpen = 0;
                            if (pension < Limit)
                            {
                                finalpen = pension;
                            }
                            else
                            {
                                finalpen = pension;
                            }
                        }
                        @Html.DisplayFor(m => lst1.RetirementType);
                    </div>
                    <div class="col-sm-12" style="height: 15px;"></div>
                    <div class="col-sm-12">
                        <label>Average Monthly basic salary of last 12 months :</label>
                        @Html.DisplayFor(m => AVG);
                    </div>
                    <div class="col-sm-12" style="height: 15px;"></div>
                    <div class="col-sm-12">
                        <label class="col-sm-5">
                            Credited Service<br />
                            (Period of service rounded to nearest integer)</label>
                        <div class="col-sm-3">
                            @Html.DisplayFor(m => year) Year
                        </div>
                    </div>
                </div>
                <div class="col-sm-12" style="height: 25px;"></div>
                <div class="col-sm-12" style="text-align: left; font-size: 16px; font-family: -webkit-pictograph;">
                    <label class="col-sm-2"><strong>Part 2</strong></label>
                    <label class="col-sm-1" style="text-align: right;"><strong>:</strong></label>
                    <label class="col-sm-2"><strong>Pension</strong></label>
                    <div class="col-sm-7"></div>
                </div>
                
                <div class="col-sm-12" style="text-align: left; font-size: 13px; font-family: -webkit-pictograph;">
                    <div class="col-sm-2">
                        <label>2/100*'A'*'B' = Rs.</label>
                    </div>
                    <div class="col-sm-1">
                        @Html.DisplayFor(m => pension) p.m.
                    </div>
                    <div class="col-sm-4"></div>
                </div>
                <div class="col-sm-12" style="text-align: left; font-size: 13px; font-family: -webkit-pictograph;">
                    <div class="col-sm-2">
                        <label>2/100*'A'*'B' = Rs.</label>
                    </div>
                    <div class="col-sm-1">
                        @Html.DisplayFor(m => Limit) p.m.
                    </div>
                    <div class="col-sm-4">(As per limit applicable effective )</div>
                </div>
                <div class="col-sm-12" style="text-align: left; font-size: 13px; font-family: -webkit-pictograph;">
                    <div class="col-sm-2">
                        <label>or say  Rs.</label>
                    </div>
                    <div class="col-sm-1">
                        @Html.DisplayFor(m => finalpen) p.m.
                    </div>
                    <div class="col-sm-4">FOR LIFE     (Before Tax)</div>
                </div>
                <div class="col-sm-12" style="text-align: left; font-size: 13px; font-family: -webkit-pictograph;">
                    <div class="col-sm-4">
                    </div>
                    <div class="col-sm-2">
                        BASED ON REVISED
                        <br />
                        PENSION LIMIT @Html.DisplayFor(m => finalpen)/-
                        <br />
                        REVISED RATES
                    </div>
                </div>
            }
        </div>
    </div>

}